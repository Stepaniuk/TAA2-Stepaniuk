<?php
#Создайте ассоциативный массив, аналогичный телефонному справочнику. Отсортируйте массив по фамилиям абонентов в алфавитном порядке
$phonebook = [
    "Степанюк" => "79297050001",
    "Петров" => "79496753382",
    "Цаплин" => "79224643551"
];
ksort($phonebook);
foreach ($phonebook as $name => $number) {
    echo "$name: $number<br>";
}





#Создайте ассоциативный многомерный массив, содержащий информацию о пользователях (ФИО, возраст, количество посещений страницы). Выведите всю информацию, начиная с пользователей, у которых количество посещений страницы больше.

$users = [
    [  "ФИО" => "Степанюк Данила Алексеевич",
        "возраст" => 19,
        "количество_посещений" => 5
    ],
    [    "ФИО" => "Петров Петр Петрович",
        "возраст" => 25,
        "количество_посещений" => 10
    ],
    [   "ФИО" => "Цаплин Александр Никитич",
        "возраст" => 35,
        "количество_посещений" => 3
    ]
];
function compare($a, $b) {
    return $b["количество_посещений"] - $a["количество_посещений"];
}

usort($users, "compare");

foreach ($users as $user) {
    echo "ФИО: " . $user["ФИО"] . ", Возраст: " . $user["возраст"] . ", Количество посещений: " . $user["количество_посещений"] . "<br>";
}





#Создайте многомерный массив, содержащий названия фильмов, организованных по жанрам: ассоциативный массив, в котором имена полей будут разными жанрами («комедия», «мелодрама», «детектив» и др.), а элементами — названия фильмов. Выведите информацию.

$films = [
    "комедия" => [
        "Один дома",
        "1+1",
        "Батя"
    ],
    "мелодрама" => [
        "Титаник",
        "Крастока",
        "Звезда родилась"
    ],
    "детектив" => [
        "Семь",
        "Шерлок Холмс",
        "Преступление и наказание"
    ]
];

foreach ($films as $genre => $movies) {
    echo "<h2>$genre</h2>". "<br>";
    foreach ($movies as $movie) {
        echo "$movie". "<br>";
    }
}




# Создайте массив, содержащий сведения об учениках класса (фамилия, рост, вес, средний балл). Найдите самого высокого ученика и выведите всю информацию о нем.

$students = [
    [
        "фамилия" => "Cтепанюк",
        "рост" => 179,
        "вес" => 90,
        "средний_балл" => 4.0
    ],
    [
        "фамилия" => "Петров",
        "рост" => 185,
        "вес" => 75,
        "средний_балл" => 4.8
    ],
    [
        "фамилия" => "Цаплин",
        "рост" => 160,
        "вес" => 55,
        "средний_балл" => 3.1
    ]
];

$highestStudent = null;
$highestHeight = 0;

foreach ($students as $student) {
    if ($student["рост"] > $highestHeight) {
        $highestHeight = $student["рост"];
        $highestStudent = $student;
    }
}

echo "Информация о самом высоком ученике:<br>";
foreach ($highestStudent as $key => $value) {
    echo $key . ": $value<br>";
}



#Создайте массив, содержащий сведения о ваших друзьях. Отсортируйте его по возрасту друзей и выведите всю информацию.

$friends = [
    [
        "имя" => "Алексей",
        "возраст" => 21,
        "машина" => "Мерседес"
    ],
    [
        "имя" => "Дмитрий",
        "возраст" => 22,
        "машина" => "БМВ"
    ],
    [
        "имя" => "Никита",
        "возраст" => 20,
        "машина" => "Вольво"
    ]
];

function compareByAge($a, $b) {
    return $a["возраст"] - $b["возраст"];
}

usort($friends, "compareByAge");

foreach ($friends as $friend) {
    echo "Имя: " . $friend["имя"] . ", Возраст: " . $friend["возраст"] . ", Машина: " . $friend["машина"] . "<br>";
}






